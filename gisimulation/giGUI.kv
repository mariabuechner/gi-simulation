#:kivy 1.10.0
#:import np numpy
#:import ntpath ntpath
#:import parser_def simulation.parser_def
#:import main mainGUI

#:set parser_info parser_def.get_arguments_info(parser_def.input_parser())
#:set num_input_size 0.3
#:set default_font_size 18
#:set line_height main.LINE_HEIGHT
#:set menu_button_width 100
#:set tab_height main.TAB_HEIGHT
#:set dark_grey np.divide([88, 88, 88, 50],[255., 255., 255., 100.])
#:set dark_red_button np.divide([255, 50, 50, 100],[255., 255., 255., 100.])
#:set dark_red_menu np.divide([154, 31, 31, 100],[255., 255., 255., 100.])
#:set darker_red_menu np.divide([128, 0, 0, 100],[255., 255., 255., 100.])

# All buttons
<Button>:
    font_size: default_font_size
    text_size: self.size
    halign: 'center'
    valign: 'center'
    max_lines: 1
    size_hint_y: None
    height: line_height

# All text inputs
<TextInput>:
    size_hint_y: None
    height: line_height
    size_hint_x: num_input_size
    multiline: False  # On enter, loose focus on textinput
    write_tab: False  # On tab, loose focus on textinput

# All checkboxes
<CheckBox>:
    size_hint: (None, None)
    height: line_height
    width: line_height
    canvas.before:
        Color:
            rgba: dark_grey
        Rectangle:
            pos: self.pos
            size: self.size


# All BoxLayouts
<BoxLayout>:
    padding: (1, 1, 0, 0 )

# All StackLayouts
<StackLayout>:
    padding: (1, 1, 0, 0 )

# Set rules for custom classes

# All NonFileBrowserLabel
<NonFileBrowserLabel>:
    font_size: default_font_size
    text_size: self.size
    halign: 'center'
    valign: 'center'
    max_lines: 1
    size_hint_y: None
    height: line_height
    canvas.before:
        Color:
            rgba: dark_grey
        Rectangle:
            pos: self.pos
            size: self.size

# All FloatInputs and IntInputs cannot accept 0 values
<FloatInput>:
    on_text: if self.text == '0': self.text = ''
<IntInput>:
    on_text: if self.text == '0': self.text = ''

<CustomSpinnerButton>:
    background_color: dark_red_button
    halign: 'left'

<ScrollableLabel>:
    NonFileBrowserLabel:
        font_size: default_font_size
        max_lines: 0
        size_hint_y: None
        height: self.texture_size[1]
        text_size: self.width, None
        text: root.text
        halign: 'left'
        valign: 'top'
        strip: True  #remove leading or trailing newlines or spaces

# gi GUI
<giGUI>:
    orientation: 'vertical'

    # Main Menu
    BoxLayout:
        size_hint_y: None
        height: line_height
        canvas.before:
            Color:
                rgba: dark_red_menu
            Rectangle:
                pos: self.pos
                size: self.size
        NonFileBrowserLabel:
            size_hint_x: None
            width: 180
            bold: True
            text: 'GI Simulation'
            canvas.before:
                Color:
                    rgba: dark_red_menu
                Rectangle:
                    pos: self.pos
                    size: self.size
        CustomSpinner:
            size_hint_x: None
            width: 100
            background_color: dark_red_button
            id: load_spinner
            text: 'Load...'
            values: ['Input file...', 'Results...']
            on_text: root.on_load_spinner(self)
        CustomSpinner:
            size_hint_x: None
            width: 100
            background_color: dark_red_button
            id: save_spinner
            text: 'Save...'
            values: ['Input file...', 'Results...']
            on_text: root.on_save_spinner(self)
        BoxLayout:
            size_hint_x: None
            width: 250
            NonFileBrowserLabel:
                text: 'Show previous results'
                canvas.before:
                    Color:
                        rgba: darker_red_menu
                    Rectangle:
                        pos: self.pos
                        size: self.size
            CheckBox:
                disabled: not root.previous_results
                id: show_previous_results
                on_active: root.on_show_previous_results_active()
                canvas:
                    Clear:
                    Color:
                        rgba: darker_red_menu
                    Rectangle:
                        size: self.size
                        pos: self.pos
                    Color:
                        rgba: 1, 1, 1, 1
                    Rectangle:
                        group: 'check_mark'
                        source: 'atlas://data/images/defaulttheme/checkbox%s_%s' % (('_radio' if self.group else ''), ('on' if self.active else 'off'))
                        size: self.size
                        pos: self.pos
        Button:
            size_hint_x: None
            width: 120
            background_color: dark_red_button
            text: 'Clear input'
            on_release: root.reset_input()
        Button:
            size_hint_x: None
            width: 140
            background_color: dark_red_button
            text: 'Clear distances'
            on_release: root.reset_distances()
        Button:
            size_hint_x: None
            width: 120
            background_color: dark_red_button
            text: 'Clear all'
            on_release: root.reset_widgets()

        Widget:
        CustomSpinner:
            size_hint_x: None
            width: 150
            background_color: dark_red_button
            id: help_spinner
            text: 'Help...'
            values: ['Spectrum file', 'Input file']
            on_text: root.on_help_spinner(self)
        Button:
            background_color: dark_red_button
            size_hint_x: None
            width: 50
            text: 'Exit'
            on_release: app.stop()


    # Splitter to seperate general input area (left) and Tabs for results
    # and specific input (right)
    BoxLayout:
        Splitter:
            sizable_from: 'right'
            max_size: root.width*0.9
            min_size: root.width*0.02


            # Right side of splitter (splitters child widget)
            BoxLayout:
                orientation: 'vertical'
                TabbedPanel:
                    id: input_tabs
                    do_default_tab: False
                    tab_width: self.size[0]/len(self.tab_list)
                    default_tab: general_inputs

                    # Content of 'general input window'
                    TabbedPanelItem:
                        id: general_inputs
                        text: 'General Parameters'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height


                                # General input
                                GridLayout:
                                    cols: 3
                                    pos_hint: {'top': 1}


                                    # GI input
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: 'GI Design'
                                            bold: True
                                        BoxLayout:
                                            orientation: 'vertical'
                                            size_hint_y: None
                                            height: root.calc_boxlayout_height(line_height, self)
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'GI geometry'
                                                    help_message: parser_info['gi_geometry'][1]
                                                Spinner:
                                                    id: gi_geometry
                                                    text: 'free'
                                                    values: ['sym', 'conv', 'inv', 'free'] if beam_geometry.text == 'cone' else ['conv', 'free']
                                                    on_text: root.on_gi_geometry()
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Beam geometry'
                                                    help_message: parser_info['beam_geometry'][1]
                                                Spinner:
                                                    id: beam_geometry
                                                    text: 'parallel'
                                                    values: ['cone', 'parallel']
                                                    on_text: root.on_beam_geometry()
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Design Energy [keV]'
                                                    help_message: parser_info['design_energy'][1]
                                                FloatInput:
                                                    id: design_energy
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Talbot order'
                                                    help_message: parser_info['talbot_order'][1]
                                                FloatInput:
                                                    id: talbot_order
                                                    disabled: gi_geometry.text == 'free'
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Dual phase GI'
                                                    help_message: parser_info['dual_phase'][1]
                                                CheckBox:
                                                    id: dual_phase
                                                    disabled: gi_geometry.text != 'conv'
                                                    on_active: root.on_dual_phase_checkbox_active()
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Sampling voxel size [um]'
                                                    help_message: parser_info['sampling_rate'][1]
                                                FloatInput:
                                                    id: sampling_rate
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Material LUT'
                                                    help_message: parser_info['look_up_table'][1]
                                                Spinner:
                                                    id: look_up_table
                                                    text: 'NIST'
                                                    values: ['NIST', 'X0H']
                                                    on_text: root.on_look_up_table()
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Photo-absorption only'
                                                    help_message: parser_info['photo_only'][1]
                                                CheckBox:
                                                    id: photo_only
                                                    disabled: look_up_table.text != 'NIST'

                                    # Source
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: 'Source'
                                            bold: True
                                        BoxLayout:
                                            orientation: 'vertical'
                                            size_hint_y: None
                                            height: root.calc_boxlayout_height(line_height, self)
                                            BoxLayout:
                                                disabled: beam_geometry.text == 'parallel'
                                                LabelHelp:
                                                    text: 'Focal spot size [um]'
                                                    help_message: parser_info['focal_spot_size'][1]
                                                FloatInput:
                                                    id: focal_spot_size
                                            BoxLayout:
                                                LabelHelp:
                                                    size_hint_x: 0.4
                                                    text: 'Choose spectrum file'
                                                    help_message: "Location of spectrum file (.csv).\nFile format:\nenergy,photons\ne1,p1\ne2,p2\n.,.\n.,.\n.,."
                                                Button:
                                                    size_hint_x: 0.1
                                                    text: 'Load'
                                                    on_press: root.show_spectrum_load()
                                                Button:
                                                    size_hint_x: 0.15
                                                    text: 'Remove'
                                                    on_press: root.spectrum_file_path = ''
                                                TextInput:
                                                    id: spectrum_file_name
                                                    text: ntpath.basename(root.spectrum_file_path)
                                                    on_text: if self.text == '': root.spectrum_file_path = ''
                                                    background_disabled_normal: self.background_normal
                                                    disabled_foreground_color: self.foreground_color
                                                    disabled: True
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Spectrum range [keV]'
                                                    help_message: parser_info['spectrum_range'][1]
                                                CheckBox:
                                                    id: spectrum_range_set
                                            BoxLayout:
                                                BoxLayout:
                                                    size_hint_x: 0.5
                                                    NonFileBrowserLabel:
                                                        text: 'Min'
                                                    FloatInput:
                                                        id: spectrum_range_min
                                                        size_hint_x: 1
                                                        disabled: not spectrum_range_set.active
                                                BoxLayout:
                                                    size_hint_x: 0.5
                                                    NonFileBrowserLabel:
                                                        text: 'Max'
                                                    FloatInput:
                                                        id: spectrum_range_max
                                                        size_hint_x: 1
                                                        disabled: not spectrum_range_set.active
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Spectrum step size [keV]'
                                                    help_message: parser_info['spectrum_step'][1]
                                                FloatInput:
                                                    id: spectrum_step
                                                    text: '1.0'
                                                    disabled: not spectrum_range_set.active or root.spectrum_file_loaded
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Filter material'
                                                    help_message: parser_info['material_filter'][1]
                                                TextInput:
                                                    id: material_filter
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Filter thickness [um]'
                                                    help_message: parser_info['thickness_filter'][1]
                                                FloatInput:
                                                    id: thickness_filter

                                    # Detector
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: 'Detector'
                                        BoxLayout:
                                            orientation: 'vertical'
                                            size_hint_y: None
                                            height: root.calc_boxlayout_height(line_height, self)
                                            BoxLayout:
                                                LabelHelp:
                                                    text: "Curved detector"
                                                    help_message: parser_info['curved_detector'][1]
                                                CheckBox:
                                                    id: curved_detector
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Detector type'
                                                    help_message: parser_info['detector_type'][1]
                                                Spinner:
                                                    id: detector_type
                                                    text: 'photon'
                                                    values: ['photon', 'conv']
                                                    on_text: if self.text not in self.values: self.text = 'photon'
                                            BoxLayout:
                                                disabled: detector_type.text == 'photon'
                                                LabelHelp:
                                                    text: 'PSF [um]'
                                                    help_message: parser_info['point_spread_function'][1]
                                                FloatInput:
                                                    id: point_spread_function
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Pixel size [um]'
                                                    help_message: parser_info['pixel_size'][1]
                                                FloatInput:
                                                    id: pixel_size
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Field of view [no. pixels] (x, y)'
                                                    help_message: parser_info['field_of_view'][1]
                                                IntInput:
                                                    id: field_of_view_x
                                                    size_hint_x: 0.25
                                                IntInput:
                                                    id: field_of_view_y
                                                    size_hint_x: 0.25
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Detector threshold [keV]'
                                                    help_message: parser_info['detector_threshold'][1]
                                                FloatInput:
                                                    id: detector_threshold
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Detector material'
                                                    help_message: parser_info['material_detector'][1]
                                                TextInput:
                                                    id: material_detector
                                            BoxLayout:
                                                LabelHelp:
                                                    text: 'Detector thickness [um]'
                                                    help_message: parser_info['thickness_detector'][1]
                                                FloatInput:
                                                    id: thickness_detector



                                # Grating input
                                GridLayout:
                                    cols: 1
                                    pos_hint: {'top': 0.75}


                                    StackLayout:
                                        BoxLayout:
                                            disabled: gi_geometry.text == 'free'
                                            size_hint_y: None
                                            height: root.calc_boxlayout_height(line_height, self)
                                            NonFileBrowserLabel:
                                                text: 'Choose the fixed grating'
                                            Spinner:
                                                id: fixed_grating
                                                text: 'Choose fixed grating...'
                                                values: root.available_gratings
                                                on_text: if (self.text not in self.values and self.text != 'Choose fixed grating...'): self.text = 'Choose fixed grating...'
                                        BoxLayout:
                                            orientation: 'vertical'
                                            size_hint_y: None
                                            height: root.calc_boxlayout_height(line_height, self)
                                            GridLayout:
                                                cols: 3


                                                # G0
                                                StackLayout:
                                                    BoxLayout:
                                                        NonFileBrowserLabel:
                                                            id: g0_set_name
                                                            text: 'G0'
                                                            bold: True
                                                        CheckBox:
                                                            id: g0_set
                                                            on_active: root.on_grating_checkbox_active(self.active, g0_set_name.text)
                                                    BoxLayout:
                                                        orientation: 'vertical'
                                                        size_hint_y: None
                                                        height: root.calc_boxlayout_height(line_height, self)
                                                        disabled: not g0_set.active
                                                        BoxLayout:
                                                            LabelHelp:
                                                                size_hint_x: 0.4
                                                                text: 'Bent'
                                                                help_message: parser_info['g0_bent'][1]
                                                            CheckBox:
                                                                id: g0_bent
                                                                on_active: root.on_grating_shape_active(self.active, g0_set_name.text)
                                                            BoxLayout:
                                                                LabelHelp:
                                                                    size_hint_x: 0.4
                                                                    text: 'Matching'
                                                                    help_message: parser_info['g0_matching'][1]
                                                                CheckBox:
                                                                    id: g0_matching
                                                                    on_active: root.on_radius_matching_active(self.active, g0_set_name.text)
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Radius [mm]'
                                                                help_message: parser_info['radius_g0'][1]
                                                            FloatInput:
                                                                id: radius_g0
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Grating type'
                                                                help_message: parser_info['type_g0'][1]
                                                            Spinner:
                                                                id: type_g0
                                                                values: ['mix', 'phase', 'abs']
                                                                on_text: root.on_grating_type('g0')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Pitch [um]'
                                                                help_message: parser_info['pitch_g0'][1]
                                                            FloatInput:
                                                                id: pitch_g0
                                                                disabled: fixed_grating.text != 'G0' and gi_geometry.text != 'free'
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Duty cycle'
                                                                help_message: parser_info['duty_cycle_g0'][1]
                                                            FloatInput:
                                                                id: duty_cycle_g0
                                                                disabled: fixed_grating.text != 'G0' and gi_geometry.text != 'free'
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Grating material'
                                                                help_message: parser_info['material_g0'][1]
                                                            TextInput:
                                                                id: material_g0
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Thickness [um]'
                                                                help_message: parser_info['thickness_g0'][1]
                                                            FloatInput:
                                                                id: thickness_g0
                                                                disabled: phase_shift_g0.text
                                                                on_text: root.on_grating_thickness('g0')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Phase shift [rad]'
                                                                help_message: parser_info['phase_shift_g0'][1]
                                                            Spinner:
                                                                id: phase_shift_g0_options
                                                                size_hint_x: num_input_size*1.2
                                                                values: ['pi', 'pi/2']
                                                                on_text: root.on_phase_shift_spinner('g0')
                                                                disabled: type_g0.text == 'abs' or thickness_g0.text or (type_g0.text == 'mix' and gi_geometry.text != 'free')
                                                            FloatInput:
                                                                id: phase_shift_g0
                                                                size_hint_x: num_input_size*1.35
                                                                disabled: type_g0.text == 'abs' or thickness_g0.text or (type_g0.text == 'mix' and gi_geometry.text != 'free')
                                                                on_text: root.on_phase_shift('g0')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Wafer material'
                                                                help_message: parser_info['wafer_material_g0'][1]
                                                            TextInput:
                                                                id: wafer_material_g0
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Wafer thickness [um]'
                                                                help_message: parser_info['wafer_thickness_g0'][1]
                                                            FloatInput:
                                                                id: wafer_thickness_g0
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Fill material'
                                                                help_message: parser_info['fill_material_g0'][1]
                                                            TextInput:
                                                                id: fill_material_g0
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Fill thickness [um]'
                                                                help_message: parser_info['fill_thickness_g0'][1]
                                                            FloatInput:
                                                                id: fill_thickness_g0


                                                # G1
                                                StackLayout:
                                                    BoxLayout:
                                                        NonFileBrowserLabel:
                                                            id: g1_set_name
                                                            text: 'G1'
                                                            bold: True
                                                        CheckBox:
                                                            id: g1_set
                                                            disabled: gi_geometry.text != 'free'
                                                            background_checkbox_disabled_down: self.background_checkbox_down
                                                            on_active: root.on_grating_checkbox_active(self.active, g1_set_name.text)
                                                    BoxLayout:
                                                        orientation: 'vertical'
                                                        size_hint_y: None
                                                        height: root.calc_boxlayout_height(line_height, self)
                                                        disabled: not g1_set.active
                                                        BoxLayout:
                                                            LabelHelp:
                                                                size_hint_x: 0.4
                                                                text: 'Bent'
                                                                help_message: parser_info['g1_bent'][1]
                                                            CheckBox:
                                                                id: g1_bent
                                                                on_active: root.on_grating_shape_active(self.active, g1_set_name.text)
                                                            BoxLayout:
                                                                LabelHelp:
                                                                    size_hint_x: 0.4
                                                                    text: 'Matching'
                                                                    help_message: parser_info['g1_matching'][1]
                                                                CheckBox:
                                                                    id: g1_matching
                                                                    on_active: root.on_radius_matching_active(self.active, g1_set_name.text)
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Radius [mm]'
                                                                help_message: parser_info['radius_g1'][1]
                                                            FloatInput:
                                                                id: radius_g1
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Grating type'
                                                                help_message: parser_info['type_g1'][1]
                                                            Spinner:
                                                                id: type_g1
                                                                values: ['mix', 'phase', 'abs']
                                                                on_text: root.on_grating_type('g1')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Pitch [um]'
                                                                help_message: parser_info['pitch_g1'][1]
                                                            FloatInput:
                                                                id: pitch_g1
                                                                disabled: fixed_grating.text != 'G1' and gi_geometry.text != 'free'
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Duty cycle'
                                                                help_message: parser_info['duty_cycle_g1'][1]
                                                            FloatInput:
                                                                id: duty_cycle_g1
                                                                disabled: fixed_grating.text != 'G1' and gi_geometry.text != 'free'
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Grating material'
                                                                help_message: parser_info['material_g1'][1]
                                                            TextInput:
                                                                id: material_g1
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Thickness [um]'
                                                                help_message: parser_info['thickness_g1'][1]
                                                            FloatInput:
                                                                id: thickness_g1
                                                                disabled: phase_shift_g1.text or (type_g1.text in ['mix', 'phase'] and gi_geometry.text != 'free')
                                                                on_text: root.on_grating_thickness('g1')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Phase shift [rad]'
                                                                help_message: parser_info['phase_shift_g1'][1]
                                                            Spinner:
                                                                id: phase_shift_g1_options
                                                                size_hint_x: num_input_size*1.2
                                                                values: ['pi', 'pi/2']
                                                                on_text: root.on_phase_shift_spinner('g1')
                                                                disabled: type_g1.text == 'abs' or thickness_g1.text
                                                            FloatInput:
                                                                id: phase_shift_g1
                                                                size_hint_x: num_input_size*1.35
                                                                disabled: type_g1.text == 'abs' or thickness_g1.text or (type_g1.text in ['mix', 'phase'] and gi_geometry.text != 'free')
                                                                on_text: root.on_phase_shift('g1')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Wafer material'
                                                                help_message: parser_info['wafer_material_g1'][1]
                                                            TextInput:
                                                                id: wafer_material_g1
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Wafer thickness [um]'
                                                                help_message: parser_info['wafer_thickness_g1'][1]
                                                            FloatInput:
                                                                id: wafer_thickness_g1
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Fill material'
                                                                help_message: parser_info['fill_material_g1'][1]
                                                            TextInput:
                                                                id: fill_material_g1
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Fill thickness [um]'
                                                                help_message: parser_info['fill_thickness_g1'][1]
                                                            FloatInput:
                                                                id: fill_thickness_g1


                                                # G2
                                                StackLayout:
                                                    BoxLayout:
                                                        NonFileBrowserLabel:
                                                            id: g2_set_name
                                                            text: 'G2'
                                                            bold: True
                                                        CheckBox:
                                                            id: g2_set
                                                            disabled: gi_geometry.text != 'free'
                                                            background_checkbox_disabled_down: self.background_checkbox_down
                                                            on_active: root.on_grating_checkbox_active(self.active, g2_set_name.text)
                                                    BoxLayout:
                                                        orientation: 'vertical'
                                                        size_hint_y: None
                                                        height: root.calc_boxlayout_height(line_height, self)
                                                        disabled: not g2_set.active
                                                        BoxLayout:
                                                            LabelHelp:
                                                                size_hint_x: 0.4
                                                                text: 'Bent'
                                                                help_message: parser_info['g2_bent'][1]
                                                            CheckBox:
                                                                id: g2_bent
                                                                on_active: root.on_grating_shape_active(self.active, g2_set_name.text)
                                                            BoxLayout:
                                                                LabelHelp:
                                                                    size_hint_x: 0.4
                                                                    text: 'Matching'
                                                                    help_message: parser_info['g2_matching'][1]
                                                                CheckBox:
                                                                    id: g2_matching
                                                                    on_active: root.on_radius_matching_active(self.active, g2_set_name.text)
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Radius [mm]'
                                                                help_message: parser_info['radius_g2'][1]
                                                            FloatInput:
                                                                id: radius_g2
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Grating type'
                                                                help_message: parser_info['type_g2'][1]
                                                            Spinner:
                                                                id: type_g2
                                                                values: ['mix', 'phase', 'abs']
                                                                on_text: root.on_grating_type('g2')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Pitch [um]'
                                                                help_message: parser_info['pitch_g2'][1]
                                                            FloatInput:
                                                                id: pitch_g2
                                                                disabled: fixed_grating.text != 'G2' and gi_geometry.text != 'free'
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Duty cycle'
                                                                help_message: parser_info['duty_cycle_g2'][1]
                                                            FloatInput:
                                                                id: duty_cycle_g2
                                                                disabled: fixed_grating.text != 'G2' and gi_geometry.text != 'free'
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Grating material'
                                                                help_message: parser_info['material_g2'][1]
                                                            TextInput:
                                                                id: material_g2
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Thickness [um]'
                                                                help_message: parser_info['thickness_g2'][1]
                                                            FloatInput:
                                                                id: thickness_g2
                                                                disabled: phase_shift_g2.text or dual_phase.active
                                                                on_text: root.on_grating_thickness('g2')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Phase shift [rad]'
                                                                help_message: parser_info['phase_shift_g2'][1]
                                                            Spinner:
                                                                id: phase_shift_g2_options
                                                                size_hint_x: num_input_size*1.2
                                                                values: ['pi', 'pi/2']
                                                                on_text: root.on_phase_shift_spinner('g2')
                                                                disabled: type_g2.text == 'abs' or thickness_g2.text or (type_g2.text == 'mix' and gi_geometry.text != 'free' and not dual_phase.active)
                                                            FloatInput:
                                                                id: phase_shift_g2
                                                                size_hint_x: num_input_size*1.35
                                                                disabled: type_g2.text == 'abs' or thickness_g2.text or (type_g2.text == 'mix' and gi_geometry.text != 'free') or dual_phase.active
                                                                on_text: root.on_phase_shift('g2')
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Wafer material'
                                                                help_message: parser_info['wafer_material_g2'][1]
                                                            TextInput:
                                                                id: wafer_material_g2
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Wafer thickness [um]'
                                                                help_message: parser_info['wafer_thickness_g2'][1]
                                                            FloatInput:
                                                                id: wafer_thickness_g2
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Fill material'
                                                                help_message: parser_info['fill_material_g2'][1]
                                                            TextInput:
                                                                id: fill_material_g2
                                                        BoxLayout:
                                                            LabelHelp:
                                                                text: 'Fill thickness [um]'
                                                                help_message: parser_info['fill_thickness_g2'][1]
                                                            FloatInput:
                                                                id: fill_thickness_g2



                                # Distances
                                GridLayout:
                                    cols: 1
                                    pos_hint: {'top': 0.275}

                                    Distances:
                                        id: distances

                    # Sample
                    TabbedPanelItem:
                        text: 'Sample'
                        BoxLayout:
                            orientation: 'vertical'
                            size_hint_y: None
                            height: root.calc_boxlayout_height(line_height, self)
                            BoxLayout:
                                NonFileBrowserLabel:
                                    text: 'Add sample'
                                Spinner:
                                    id: sample_relative_position
                                    text: 'after'
                                    values: ['after']
                                    on_text: root.on_sample_relative_position()
                                Spinner:
                                    id: sample_relative_to
                                    text: 'Source'
                                    on_text: root.on_sample_relative_to()
                                    values: root.setup_components if 'Sample' not in root.setup_components else list(root.setup_components).remove('Sample')
                                CheckBox:
                                    id: add_sample
                                    on_active: root.on_sample_checkbox_active(self.active)
                            BoxLayout:
                                orientation: 'vertical'
                                size_hint_y: None
                                height: root.calc_boxlayout_height(line_height, self)
                                disabled: not add_sample.active
                                BoxLayout:
                                    LabelHelp:
                                        id: sample_distance_label
                                        help_message: parser_info['sample_distance'][1]
                                    FloatInput:
                                        id: sample_distance
                            BoxLayout:
                                orientation: 'vertical'
                                size_hint_y: None
                                height: root.calc_boxlayout_height(line_height, self)
                                disabled: not add_sample.active
                                BoxLayout:
                                    LabelHelp:
                                        text: 'Shape of sample'
                                        help_message: parser_info['sample_shape'][1]
                                    Spinner:
                                        id: sample_shape
                                        text: ''
                                        values: ['circular']
                                        on_text: if self.text not in self.values: self.text = ''
                                    LabelHelp:
                                        id: sample_diameter_label
                                        text: 'Sample diameter [mm]'
                                        help_message: parser_info['sample_diameter'][1]
                                    FloatInput:
                                        id: sample_diameter

                            Widget:
                            Widget:
                            Widget:

                Button:
                    disabled: show_previous_results.active
                    size_hint_y: None
                    text: 'Calculate geometry'
                    on_press: root.calculate_geometry(switch_tab=True)

                Button:
                    disabled: show_previous_results.active
                    size_hint_y: None
                    text: 'Calculate analytical results'
                    on_press: root.calculate_analytical(switch_tab=True)

                Button:
                    disabled: show_previous_results.active
                    size_hint_y: None
                    text: 'Run simulation'
                    on_press: root.run_simulation()


        # Left side of splitter
        TabbedPanel:
            id: result_tabs
            do_default_tab: False
            tab_width: self.size[0]/len(self.tab_list)

            # Geometry
            TabbedPanelItem:
                text: 'Geometry'
                id: geometry_results

                ScrollView:
                    FloatLayout:
                        size_hint_y: None
                        height: tab_height
                        NonFileBrowserLabel:
                            pos_hint: {'top': 1}
                            text: str(beam_geometry.text+' beam and '+gi_geometry.text+' geometry')
                        GeometryGrid:
                            id: geometry_sketch
                            cols: 1
                            pos: (0, tab_height-line_height-self.height)
                            size_hint: (None, None)
                            height: 400
                            width: 800
                        GridLayout:
                            pos_hint: {'top': 0.6}
                            cols: 2
                            col_default_width: geometry_sketch.width/2.0 + 50
                            col_force_default: True
                            StackLayout:
                                NonFileBrowserLabel:
                                    text: 'Distances'
                                    bold: True
                                BoxLayout:
                                    orientation: 'vertical'
                                    size_hint_y: None
                                    height: root.calc_boxlayout_height(line_height, self)
                                    BoxLayout:
                                        NonFileBrowserLabel:
                                            text: 'Distance'
                                        NonFileBrowserLabel:
                                            text: '[mm]'
                                BoxLayout:
                                    id: distances_results
                                    orientation: 'vertical'
                                    size_hint_y: None

                            StackLayout:
                                NonFileBrowserLabel:
                                    text: 'Gratings'
                                    bold: True
                                BoxLayout:
                                    orientation: 'vertical'
                                    size_hint_y: None
                                    height: root.calc_boxlayout_height(line_height, self)
                                    BoxLayout:
                                        NonFileBrowserLabel:
                                            text: 'Grating'
                                        NonFileBrowserLabel:
                                            text: 'Pitch [um]'
                                        NonFileBrowserLabel:
                                            text: 'Duty Cycle'
                                        NonFileBrowserLabel:
                                            text: 'Radius [mm]'
                                BoxLayout:
                                    id: grating_results
                                    orientation: 'vertical'
                                    size_hint_y: None

            # Analytical results
            TabbedPanelItem:
                text: 'Analytical'
                id: analytical_results
                TabbedPanel:
                    id: analytical_tabs
                    do_default_tab: False
                    tab_width: self.size[0]/len(self.tab_list)

                    # Spectrum development
                    TabbedPanelItem:
                        text: 'Spectrum'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height

                                GridLayout:
                                    pos_hint: {'top': 1}
                                    cols: 2
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: 'Original'
#                                        BoxLayout:
#                                            orientation: 'vertical'
#                                            size_hint_y: None
#                                            height: root.calc_boxlayout_height(line_height, self)
#                                            BoxLayout:
#                                                NonFileBrowserLabel:
#                                                    text: 'Distance'
#                                                NonFileBrowserLabel:
#                                                    text: '[mm]'
#                                        BoxLayout:
#                                            id: distances_results
#                                            orientation: 'vertical'
#                                            size_hint_y: None

                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: '+ Filter'

                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: '+ Gratings'

                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: '+ Sample'

                    # Visibility
                    TabbedPanelItem:
                        text: 'Visibility'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height

                                GridLayout:
                                    pos_hint: {'top': 1}
                                    cols: 2
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: 'Gratings'
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: '+ Filter'


                    # Performance (Radiography and CT)
                    TabbedPanelItem:
                        text: 'Performance'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height

                                # Radiography
                                NonFileBrowserLabel:
                                    pos_hint: {'top': 1}
                                    text: 'Radiography'

                                # CT
                                NonFileBrowserLabel:
                                    pos_hint: {'top': 0.5}
                                    text: 'CT'

            # Simulation results
            TabbedPanelItem:
                text: 'Simulation'
                id: simulation_results
                TabbedPanel:
                    id: simulation_tabs
                    do_default_tab: False
                    tab_width: self.size[0]/len(self.tab_list)

                    # Interference pattern
                    TabbedPanelItem:
                        text: 'Interference pattern'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height

                                # No sample
                                NonFileBrowserLabel:
                                    pos_hint: {'top': 1}
                                    text: 'Without sample'

                                # With sample
                                NonFileBrowserLabel:
                                    pos_hint: {'top': 0.5}
                                    text: 'With sample'

                    # Images
                    TabbedPanelItem:
                        text: 'Images'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height

                                # With sample
                                NonFileBrowserLabel:
                                    pos_hint: {'top': 1}
                                    text: 'With sample'

                                        # Visibility
                    TabbedPanelItem:
                        text: 'Visibility'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height

                                GridLayout:
                                    pos_hint: {'top': 1}
                                    cols: 2
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: 'Gratings'
                                    StackLayout:
                                        NonFileBrowserLabel:
                                            text: '+ Filter'

                    # Performance (Radiography and CT)
                    TabbedPanelItem:
                        text: 'Performance'

                        ScrollView:
                            FloatLayout:
                                size_hint_y: None
                                height: tab_height

                                # Radiography
                                NonFileBrowserLabel:
                                    pos_hint: {'top': 1}
                                    text: 'Radiography'

                                # CT
                                NonFileBrowserLabel:
                                    pos_hint: {'top': 0.5}
                                    text: 'CT'